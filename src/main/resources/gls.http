### Variables
@baseUrl = https://api.mygls.ro
@username = it@gls-romania.ro
@passwordArray = [102,122,194,220,2,85,185,22,54,200,105,108,163,93,26,224,44,148,117,122,111,35,159,251,41,35,197,202,169,37,48,26,134,142,246,92,117,238,123,255,209,150,221,105,9,60,91,148,93,96,66,211,48,87,252,157,125,40,22,143,209,223,219,142]
@clientNumber = 550011855

### Create Shipment
POST {{baseUrl}}/ParcelService.svc/json/PrintLabels?username={{username}}&password={{passwordArray}}
Content-Type: application/json

{
  "Username": "{{username}}",
  "Password": {{passwordArray}},
  "ParcelList": [
    {
      "ClientNumber": {{clientNumber}},
      "ClientReference": "",
      "CODAmount": 150.00,
      "CODReference": "REF123",
      "Content": "Test package content",
      "Count": 1,
      "PickupDate": "/Date(1708473600000)/",
      "PickupAddress": {
        "Name": "Sender Name",
        "Street": "Strada Example",
        "HouseNumber": "123",
        "HouseNumberInfo": "Apt 4B",
        "City": "Bucharest",
        "ZipCode": "012345",
        "CountryIsoCode": "RO",
        "ContactName": "Contact Person",
        "ContactPhone": "+40722123456",
        "ContactEmail": "sender@example.com"
      },
      "DeliveryAddress": {
        "Name": "Recipient Name",
        "Street": "Strada Delivery",
        "HouseNumber": "456",
        "HouseNumberInfo": "Floor 2",
        "City": "Cluj-Napoca",
        "ZipCode": "400000",
        "CountryIsoCode": "RO",
        "ContactName": "Recipient Contact",
        "ContactPhone": "+40722654321",
        "ContactEmail": "recipient@example.com"
      },
      "ServiceList": [
        {
          "Code": "PSS"
        }
      ]
    }
  ]
}

### Track Shipment
POST {{baseUrl}}/ParcelService.svc/json/GetParcelStatuses?username={{username}}&password={{passwordArray}}
Content-Type: application/json

{
  "ParcelNumber": 59489195,
  "ReturnPOD": false,
  "LanguageIsoCode": "RO",
  "Username": "{{username}}",
  "Password": {{passwordArray}}
}

### Note about Password encryption
# The password needs to be SHA-512 hashed and converted to an array of bytes
# Example JavaScript code to generate the password array:
#
# const crypto = require('crypto');
# const password = 'VBSW6mFn';
# const hash = crypto.createHash('sha512').update(password).digest();
# console.log(Array.from(hash));
